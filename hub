# app.py

import numpy as np
import qrcode
from PIL import Image, ImageDraw
from flask import Flask, request, send_file
import io
import math

app = Flask(__name__)

def generate_trig_qr_code(data, scale=10):
    qr = qrcode.QRCode(
        version=1,
        error_correction=qrcode.constants.ERROR_CORRECT_H,
        box_size=10,
        border=4,
    )
    qr.add_data(data)
    qr.make(fit=True)
    img = qr.make_image(fill_color="black", back_color="white").convert('RGB')
    
    img = img.resize((img.size[0] * scale, img.size[1] * scale), Image.NEAREST)
    pixels = img.load()

    for y in range(img.size[1]):
        for x in range(img.size[0]):
            if pixels[x, y] == (0, 0, 0):
                angle = math.radians(x + y)  # example trig function based on position
                radius = 5  # example radius
                new_x = int(x + radius * math.cos(angle))
                new_y = int(y + radius * math.sin(angle))
                if 0 <= new_x < img.size[0] and 0 <= new_y < img.size[1]:
                    pixels[new_x, new_y] = (0, 0, 0)
                    pixels[x, y] = (255, 255, 255)

    return img

@app.route('/generate', methods=['POST'])
def generate():
    data = request.form.get('data')
    if not data:
        return "No data provided", 400

    img = generate_trig_qr_code(data)
    buf = io.BytesIO()
    img.save(buf, format='PNG')
    buf.seek(0)

    return send_file(buf, mimetype='image/png', as_attachment=True, download_name='qr_code.png')

@app.route('/')
def index():
    return '''
    <!doctype html>
    <html>
    <body>
        <h1>
